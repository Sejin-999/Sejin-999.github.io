

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Sejin의 개발공부</title>
  <subtitle>hi , i'm sejin</subtitle>
  <updated>2024-03-20T18:17:52+09:00</updated>
  <author>
    <name>Yang Se Jin</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Yang Se Jin </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>test 해보기</title>
    <link href="http://localhost:4000/posts/testPage/" rel="alternate" type="text/html" title="test 해보기" />
    <published>2024-03-18T06:44:00+09:00</published>
  
    <updated>2024-03-18T06:44:00+09:00</updated>
  
    <id>http://localhost:4000/posts/testPage/</id>
    <content src="http://localhost:4000/posts/testPage/" />
    <author>
      <name>Yang Se Jin</name>
    </author>

  
    
    <category term="Blog" />
    
  

  
    <summary>
      





      목차


  링크
  목록
  코드 블록
  인용문
  이미지


링크

구글에 가보세요.

목록


  항목 1
  항목 2
    
      하위 항목 1
      하위 항목 2
    
  


코드 블록

public class Main {
    public static void main(String[] args) {
        System.out.println("Hello, world!");
    }
}


인용문


  인용문입니다. 이것은 어떤 작가나 발언자의 말을 인용할 때 사용됩니다.


이미지



    </summary>
  

  </entry>

  
  <entry>
    <title>JAVA에 대하여 - 메모리 &amp; 가비지 컬렉션</title>
    <link href="http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EB%A9%94%EB%AA%A8%EB%A6%AC/" rel="alternate" type="text/html" title="JAVA에 대하여 - 메모리 &amp;amp; 가비지 컬렉션" />
    <published>2024-01-06T06:44:00+09:00</published>
  
    <updated>2024-01-06T06:44:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EB%A9%94%EB%AA%A8%EB%A6%AC/</id>
    <content src="http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EB%A9%94%EB%AA%A8%EB%A6%AC/" />
    <author>
      <name>Yang Se Jin</name>
    </author>

  
    
    <category term="java" />
    
  

  
    <summary>
      





      들어가며

이번 포스트에서는 Java가 메모리를 어떤식으로 활용하는지에 대한 이야기를 정리해보려고 합니다.

자세하게 생각하면 끝도 없는 영역이기 때문에 아 이런식으로 동작하는 구나 정도의 수준의 정리 내용입니다.

언어들은 메모리를 어떻게 쓸가?

Java와 같이 컴파일러를 통해 기계어를 만들어 사용하는 언어들은 아래 그림처럼

코드를 실행하는 영역과 데이터를 저장하는 영역으로 나누어 메모리를 할당해 사용합니다.

자바의 경우에 데이터를 저장하는 방법은 크게 3가지로 나누어 이야기할 수 있습니다.



Java가 최초 저장할때는 해당영역을 사용합니다.

더 정확히 구분하면

Method Area 와 Static Area로 나눌 수 있습니다.

Method Area vs Static Area?

메서드...
    </summary>
  

  </entry>

  
  <entry>
    <title>JAVA에 대하여 - 동작</title>
    <link href="http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EB%8F%99%EC%9E%91/" rel="alternate" type="text/html" title="JAVA에 대하여 - 동작" />
    <published>2024-01-05T06:44:00+09:00</published>
  
    <updated>2024-01-05T06:44:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EB%8F%99%EC%9E%91/</id>
    <content src="http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EB%8F%99%EC%9E%91/" />
    <author>
      <name>Yang Se Jin</name>
    </author>

  
    
    <category term="java" />
    
  

  
    <summary>
      





      들어가며

이번 포스트 에서는 자바가 동작하는 구동 과정의 대해 정리해 보려고 합니다. 자바가 매력적인 이유 중 하나인 구동 과정에 대한 이야기는 매우 흥미롭습니다.

자바는 어떻게 보여지나



제가 정리하면 이미지를 보시면 크게 3가지의 소프트웨어를 통해 동작한다는 것을 볼 수 있습니다.

JDK = 개발도구 , JRE = JVM용 OS , JVM = 자바 전용 가상 컴퓨터

이전 포스트에서 자바가 나온 이유에 대해 설명하며 다양한 플렛폼에서 사용이 가능하다는 의미가 바로 이런식으로 동작하기 때문에 가능합니다.

이런 특성을 Write once Run Anywhere 이라고 하는데 한국어로 “한번 쓰면 계속 쓸 수 있음” 입니다.

JVM의 특징을 정리해보면 다음 과 같습니다.


  플랫폼 독립성...
    </summary>
  

  </entry>

  
  <entry>
    <title>JAVA에 대하여 - 객체</title>
    <link href="http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EA%B0%9D%EC%B2%B4/" rel="alternate" type="text/html" title="JAVA에 대하여 - 객체" />
    <published>2024-01-04T06:44:00+09:00</published>
  
    <updated>2024-01-04T06:44:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EA%B0%9D%EC%B2%B4/</id>
    <content src="http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EA%B0%9D%EC%B2%B4/" />
    <author>
      <name>Yang Se Jin</name>
    </author>

  
    
    <category term="java" />
    
  

  
    <summary>
      





      객체 와 동작에 대한 이야기

이번 포스트에서는 객체에 대해 이야기 해보겠습니다.

필자 개인적으로 객체는 이해했다고 생각하면 뭔가 틀리는 경우도 있어서 이번 포스트를 적어보며 정리하는 시간을 가져봅니다.

객체?

자바에서 객체지향은 매우 중요한 개념입니다.

객체 지향 즉, 객체를 만들어서 사용하는것을 지향한다. 인데

여기서 객체를 정리해보면 이렇습니다.

객체(Object)는 클래스(Class)의 인스턴스(Instance)

클래스란, 객체와 행위가 합쳐진 공간입니다. 템플릿을 의미 합니다. 빗대어 표현하면 ‘틀’ 이라고 표현할 수 있습니다.

인스턴스란, 클래스의 속하는 실제하는 객체 즉, 진짜 메모리에 할당 되어있는 객체를 말합니다.

즉, 객체라는 것은 실제하는 메모리에 들어있는 데이터 그...
    </summary>
  

  </entry>

  
  <entry>
    <title>JAVA에 대하여 - 서론</title>
    <link href="http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EC%84%9C%EB%A1%A0/" rel="alternate" type="text/html" title="JAVA에 대하여 - 서론" />
    <published>2024-01-03T06:44:00+09:00</published>
  
    <updated>2024-03-20T15:48:19+09:00</updated>
  
    <id>http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EC%84%9C%EB%A1%A0/</id>
    <content src="http://localhost:4000/posts/Java%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EC%84%9C%EB%A1%A0/" />
    <author>
      <name>Yang Se Jin</name>
    </author>

  
    
    <category term="java" />
    
  

  
    <summary>
      





      들어가며

JAVA에 대해 공부하며 배운 것들을 정리하고 생각한 것들을 정리하는 포스트 입니다.

개발자들이 많이 사용하는 언어가 궁금해 찾아보다 해당 사이트를 확인했습니다.



https://www.tiobe.com/tiobe-index/

Python , c 계열 , 자바 가 50 퍼센트 가량 비율을 차지하고 있습니다.

특히, 대한민국에서는 정부 공식 프레임워크로 Spring기반을 사용하기 때문에 비중도가 높습니다.

Python 의 경우 웹개발자 뿐만 아니라 AI , IOT등 차세대 분야에서도 많이 사용되고 있고 , 처음 언어를 공부할 때 편리하게 접근할 수 있어 높은 Ratings를 보여줍니다. 또한, 컴퓨터 공학을 전공하지는 않았지만 많은 관련업의 종사하시는 분들이 개발 언어로써 사용하고 ...
    </summary>
  

  </entry>

</feed>


